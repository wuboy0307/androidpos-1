package net.pointbridge.android.sales.db;

import net.pointbridge.android.sales.db.DaoSession;
import de.greenrobot.dao.DaoException;

// THIS CODE IS GENERATED BY greenDAO, DO NOT EDIT. Enable "keep" sections if you want to edit. 
/**
 * Entity mapped to table CUSTOMER.
 */
public class Customer {

    private String cust_code;
    /** Not-null value. */
    private String cust_name;
    private String cust_address1;
    private String cust_address2;
    private String cust_city;
    private String cust_prov;
    private String cust_country;
    private String cust_postal;
    private String cust_email;
    private String cust_phone1;
    private String cust_phone2;
    private String cust_fax;
    private Integer cust_sex;
    private Integer cust_active;
    private String cust_taxno;
    private String cust_pkpno;
    private java.util.Date cust_pkpdate;
    private String ct_code;
    private String src_code;
    private String ori_code;
    private Integer mark;
    private String modi_by;
    private java.util.Date modi_date;

    /** Used to resolve relations */
    private transient DaoSession daoSession;

    /** Used for active entity operations. */
    private transient CustomerDao myDao;

    private CustomerInfo customerInfo;
    private String customerInfo__resolvedKey;


    public Customer() {
    }

    public Customer(String cust_code) {
        this.cust_code = cust_code;
    }

    public Customer(String cust_code, String cust_name, String cust_address1, String cust_address2, String cust_city, String cust_prov, String cust_country, String cust_postal, String cust_email, String cust_phone1, String cust_phone2, String cust_fax, Integer cust_sex, Integer cust_active, String cust_taxno, String cust_pkpno, java.util.Date cust_pkpdate, String ct_code, String src_code, String ori_code, Integer mark, String modi_by, java.util.Date modi_date) {
        this.cust_code = cust_code;
        this.cust_name = cust_name;
        this.cust_address1 = cust_address1;
        this.cust_address2 = cust_address2;
        this.cust_city = cust_city;
        this.cust_prov = cust_prov;
        this.cust_country = cust_country;
        this.cust_postal = cust_postal;
        this.cust_email = cust_email;
        this.cust_phone1 = cust_phone1;
        this.cust_phone2 = cust_phone2;
        this.cust_fax = cust_fax;
        this.cust_sex = cust_sex;
        this.cust_active = cust_active;
        this.cust_taxno = cust_taxno;
        this.cust_pkpno = cust_pkpno;
        this.cust_pkpdate = cust_pkpdate;
        this.ct_code = ct_code;
        this.src_code = src_code;
        this.ori_code = ori_code;
        this.mark = mark;
        this.modi_by = modi_by;
        this.modi_date = modi_date;
    }

    /** called by internal mechanisms, do not call yourself. */
    public void __setDaoSession(DaoSession daoSession) {
        this.daoSession = daoSession;
        myDao = daoSession != null ? daoSession.getCustomerDao() : null;
    }

    public String getCust_code() {
        return cust_code;
    }

    public void setCust_code(String cust_code) {
        this.cust_code = cust_code;
    }

    /** Not-null value. */
    public String getCust_name() {
        return cust_name;
    }

    /** Not-null value; ensure this value is available before it is saved to the database. */
    public void setCust_name(String cust_name) {
        this.cust_name = cust_name;
    }

    public String getCust_address1() {
        return cust_address1;
    }

    public void setCust_address1(String cust_address1) {
        this.cust_address1 = cust_address1;
    }

    public String getCust_address2() {
        return cust_address2;
    }

    public void setCust_address2(String cust_address2) {
        this.cust_address2 = cust_address2;
    }

    public String getCust_city() {
        return cust_city;
    }

    public void setCust_city(String cust_city) {
        this.cust_city = cust_city;
    }

    public String getCust_prov() {
        return cust_prov;
    }

    public void setCust_prov(String cust_prov) {
        this.cust_prov = cust_prov;
    }

    public String getCust_country() {
        return cust_country;
    }

    public void setCust_country(String cust_country) {
        this.cust_country = cust_country;
    }

    public String getCust_postal() {
        return cust_postal;
    }

    public void setCust_postal(String cust_postal) {
        this.cust_postal = cust_postal;
    }

    public String getCust_email() {
        return cust_email;
    }

    public void setCust_email(String cust_email) {
        this.cust_email = cust_email;
    }

    public String getCust_phone1() {
        return cust_phone1;
    }

    public void setCust_phone1(String cust_phone1) {
        this.cust_phone1 = cust_phone1;
    }

    public String getCust_phone2() {
        return cust_phone2;
    }

    public void setCust_phone2(String cust_phone2) {
        this.cust_phone2 = cust_phone2;
    }

    public String getCust_fax() {
        return cust_fax;
    }

    public void setCust_fax(String cust_fax) {
        this.cust_fax = cust_fax;
    }

    public Integer getCust_sex() {
        return cust_sex;
    }

    public void setCust_sex(Integer cust_sex) {
        this.cust_sex = cust_sex;
    }

    public Integer getCust_active() {
        return cust_active;
    }

    public void setCust_active(Integer cust_active) {
        this.cust_active = cust_active;
    }

    public String getCust_taxno() {
        return cust_taxno;
    }

    public void setCust_taxno(String cust_taxno) {
        this.cust_taxno = cust_taxno;
    }

    public String getCust_pkpno() {
        return cust_pkpno;
    }

    public void setCust_pkpno(String cust_pkpno) {
        this.cust_pkpno = cust_pkpno;
    }

    public java.util.Date getCust_pkpdate() {
        return cust_pkpdate;
    }

    public void setCust_pkpdate(java.util.Date cust_pkpdate) {
        this.cust_pkpdate = cust_pkpdate;
    }

    public String getCt_code() {
        return ct_code;
    }

    public void setCt_code(String ct_code) {
        this.ct_code = ct_code;
    }

    public String getSrc_code() {
        return src_code;
    }

    public void setSrc_code(String src_code) {
        this.src_code = src_code;
    }

    public String getOri_code() {
        return ori_code;
    }

    public void setOri_code(String ori_code) {
        this.ori_code = ori_code;
    }

    public Integer getMark() {
        return mark;
    }

    public void setMark(Integer mark) {
        this.mark = mark;
    }

    public String getModi_by() {
        return modi_by;
    }

    public void setModi_by(String modi_by) {
        this.modi_by = modi_by;
    }

    public java.util.Date getModi_date() {
        return modi_date;
    }

    public void setModi_date(java.util.Date modi_date) {
        this.modi_date = modi_date;
    }

    /** To-one relationship, resolved on first access. */
    public CustomerInfo getCustomerInfo() {
        String __key = this.cust_code;
        if (customerInfo__resolvedKey == null || customerInfo__resolvedKey != __key) {
            if (daoSession == null) {
                throw new DaoException("Entity is detached from DAO context");
            }
            CustomerInfoDao targetDao = daoSession.getCustomerInfoDao();
            CustomerInfo customerInfoNew = targetDao.load(__key);
            synchronized (this) {
                customerInfo = customerInfoNew;
            	customerInfo__resolvedKey = __key;
            }
        }
        return customerInfo;
    }

    public void setCustomerInfo(CustomerInfo customerInfo) {
        synchronized (this) {
            this.customerInfo = customerInfo;
            cust_code = customerInfo == null ? null : customerInfo.getCi_id();
            customerInfo__resolvedKey = cust_code;
        }
    }

    /** Convenient call for {@link AbstractDao#delete(Object)}. Entity must attached to an entity context. */
    public void delete() {
        if (myDao == null) {
            throw new DaoException("Entity is detached from DAO context");
        }    
        myDao.delete(this);
    }

    /** Convenient call for {@link AbstractDao#update(Object)}. Entity must attached to an entity context. */
    public void update() {
        if (myDao == null) {
            throw new DaoException("Entity is detached from DAO context");
        }    
        myDao.update(this);
    }

    /** Convenient call for {@link AbstractDao#refresh(Object)}. Entity must attached to an entity context. */
    public void refresh() {
        if (myDao == null) {
            throw new DaoException("Entity is detached from DAO context");
        }    
        myDao.refresh(this);
    }

}
